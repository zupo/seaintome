#!/bin/bash

# This is a script that turns this repo into a Heroku buildpack so that it
# can initialize a git repository from the files in the dyno. I need this so
# I can push changes to content/ folder to GitHub when clicking the Publish
# button inside Lektor's admin interface.

# Inspired by https://github.com/SectorLabs/heroku-buildpack-git-submodule/
# but without the submodules support because I don't need it


BUILD_DIR="$1"
ENV_DIR="$3"

# load required environment variables
GIT_REPO_URL=$(<"$ENV_DIR/GIT_REPO_URL")
GIT_SSH_KEY=$(<"$ENV_DIR/GIT_SSH_KEY")

if [[ -z $GIT_REPO_URL ]]; then
    echo "Did you forget to set GIT_REPO_URL?"
    exit 1
fi

if [[ -z $GIT_SSH_KEY ]]; then
    echo "Did you forget to set GIT_SSH_KEY?"
    exit 1
fi

# make sure we're in the root of the app dir
cd "$BUILD_DIR"

# create an empty repo to fetch into
git init -q

# configure identity so I can commit & push later on
git config user.email "heroku@seaintome.com"
git config user.name "Lektor on Heroku"

# enable sparse checkouts, this will avoid checking out
# all the files in the repo, we'll only check out .gitmodules
#git config core.sparseCheckout true
#echo ".gitmodules" > .git/info/sparse-checkout

# add the repo as a remote and fetch the repo's history
git remote add origin "$GIT_REPO_URL"

# install the ssh key
mkdir -p $BUILD_DIR/.ssh
ssh-keyscan -H github.com >> $BUILD_DIR/.ssh/known_hosts 2> /dev/null
cat "$ENV_DIR/GIT_SSH_KEY" > $BUILD_DIR/.ssh/id_rsa
chmod 600 $BUILD_DIR/.ssh/id_rsa

# ignore/hide ssh warnings
echo "Host *" >> $BUILD_DIR/.ssh/config
echo "   StrictHostKeyChecking no" >> $BUILD_DIR/.ssh/config
echo "   UserKnownHostsFile /dev/null" >> $BUILD_DIR/.ssh/config
echo "   LogLevel ERROR" >> $BUILD_DIR/.ssh/config
echo "-----> Installed SSH key from GIT_SSH_KEY"

# checkout the revision that's being deployed
git fetch -q --depth 1 origin -a > /dev/null
git checkout -q ${SOURCE_VERSION:-master} -f > /dev/null
echo "-----> Fetched shallow history from $GIT_REPO_URL"
